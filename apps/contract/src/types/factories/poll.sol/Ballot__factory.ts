/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Ballot, BallotInterface } from "../../poll.sol/Ballot";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proposalNames",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getProposals",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "name",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "voteCount",
            type: "uint256",
          },
        ],
        internalType: "struct Ballot.Proposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposal",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voters",
    outputs: [
      {
        internalType: "bool",
        name: "voted",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "vote",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winnerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "winnerName_",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winningProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "winningProposal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105b13803806105b183398101604081905261002f916100b7565b60005b815181101561009a576001604051806040016040528084848151811061005a5761005a610174565b6020908102919091018101518252600091810182905283546001818101865594835291819020835160029093020191825591909101519082015501610032565b505061018a565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156100ca57600080fd5b82516001600160401b03808211156100e157600080fd5b818501915085601f8301126100f557600080fd5b815181811115610107576101076100a1565b8060051b604051601f19603f8301168101818110858211171561012c5761012c6100a1565b60405291825284820192508381018501918883111561014a57600080fd5b938501935b828510156101685784518452938501939285019261014f565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b610418806101996000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630121b93f14610067578063013cf08b1461007c578063609ff1bd146100a957806362564c48146100bf578063a3ec138d146100d4578063e2ba53f014610118575b600080fd5b61007a61007536600461030d565b610120565b005b61008f61008a36600461030d565b6101c6565b604080519283526020830191909152015b60405180910390f35b6100b16101f4565b6040519081526020016100a0565b6100c7610267565b6040516100a09190610326565b6101016100e2366004610375565b6000602081905290815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152016100a0565b6100b16102da565b336000908152602081905260409020805460ff16156101765760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b604482015260640160405180910390fd5b805460ff191660019081178255818101839055805481908490811061019d5761019d6103a5565b906000526020600020906002020160010160008282546101bd91906103bb565b90915550505050565b600181815481106101d657600080fd5b60009182526020909120600290910201805460019091015490915082565b600080805b600154811015610262578160018281548110610217576102176103a5565b906000526020600020906002020160010154111561025a5760018181548110610242576102426103a5565b90600052602060002090600202016001015491508092505b6001016101f9565b505090565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156102d15783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061028b565b50505050905090565b600060016102e66101f4565b815481106102f6576102f66103a5565b906000526020600020906002020160000154905090565b60006020828403121561031f57600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b8281101561036857815180518552860151868501529284019290850190600101610343565b5091979650505050505050565b60006020828403121561038757600080fd5b81356001600160a01b038116811461039e57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b808201808211156103dc57634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122010cbe838ddaf0c1ff09d1162075b9cd9c702e5a945c98518312bb57e636bb79364736f6c63430008180033";

type BallotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ballot__factory extends ContractFactory {
  constructor(...args: BallotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    proposalNames: BytesLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(proposalNames, overrides || {});
  }
  override deploy(
    proposalNames: BytesLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(proposalNames, overrides || {}) as Promise<
      Ballot & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Ballot__factory {
    return super.connect(runner) as Ballot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotInterface {
    return new Interface(_abi) as BallotInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Ballot {
    return new Contract(address, _abi, runner) as unknown as Ballot;
  }
}
